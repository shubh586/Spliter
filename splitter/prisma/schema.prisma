generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id       String         @id @default(uuid())
  name     String
  email    String         @unique
  clerkId  String         @unique
  expenses expenses[]
  groups   groupmembers[]
  received payments[]     @relation("receiver")
  sent     payments[]     @relation("sender")
  splits   splits[]

  @@index([email])
  @@index([clerkId])
}

model group {
  id        String         @id @default(uuid())
  name      String
  createdAt DateTime       @default(now())
  expenses  expenses[]
  members   groupmembers[]
  payments  payments[]
}

model groupmembers {
  id       String   @id @default(uuid())
  joinedAt DateTime @default(now())
  userId   String
  groupId  String
  group    group    @relation(fields: [groupId], references: [id])
  user     user     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([groupId])
}

model expenses {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  amount      Float
  description String
  paidBy      String
  groupId     String
  group       group    @relation(fields: [groupId], references: [id])
  paid        user     @relation(fields: [paidBy], references: [id])
  splits      splits[]

  @@index([paidBy])
  @@index([groupId])
}

model splits {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  amount    Float
  expenseId String
  userId    String
  expense   expenses @relation(fields: [expenseId], references: [id])
  user      user     @relation(fields: [userId], references: [id])

  @@index([expenseId])
  @@index([userId])
}

model payments {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  amount     Float
  sentId     String
  receivedId String
  groupId    String?
  group      group?   @relation(fields: [groupId], references: [id])
  received   user     @relation("receiver", fields: [receivedId], references: [id])
  sent       user     @relation("sender", fields: [sentId], references: [id])

  @@index([groupId])
  @@index([sentId])
  @@index([receivedId])
}
